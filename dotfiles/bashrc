# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

umask 002

# User specific environment and startup programs

export PATH=$HOME/bin:$HOME/.local/bin:$PATH

## color prompt
## if [[ -z "$GUS_PROJ_NAME" ]]; then
##     PS1='--\n\[\033[0;32m\]\u@\h\[\033[00m\]:\[\033[0;34m\]\w\[\033[00m\]\n>> '
## else
##     PS1='--\n\[\033[0;32m\]\u@\h\[\033[00m\] \[\033[1;31m\]<${GUS_PROJ_NAME}>\[\033[00m\] \[\033[1;33m\]<$(branches)>\[\033[00m\] \[\033[0;34m\]\w\[\033[00m\] \n>> '
## fi

## colorful
# PS1='--\n\[\033[0;32m\]\u@\h\[\033[00m\] \[\033[1;31m\]$(project_prompt)\[\033[00m\]\[\033[1;33m\]$(branch_prompt)\[\033[00m\]\[\033[0;34m\]\w\[\033[00m\] \n>> '

## not colorful
# PS1='--\n\u@\h $(project_prompt)$(branch_prompt)\w \n>> '

# b&w prompt
PS1='\[\e[1;30m\]\n\w\n\h ‚ùØ \[\e[0m\]'

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
screen*)
    PROMPT_COMMAND='echo -ne "\033k$HOSTNAME\033\\"'
    ;;
*)
    ;;
esac

# User specific aliases and functions

alias vi='vim'
alias view='vim -R'
# found http://blog.cachemiss.com/articles/Using%20readline%20with%20Oracle%20SQL*Plus.pod
alias sqlplus="rlwrap -i -f ~/.sqlplus_history -H ~/.sqlplus_history -s 30000 sqlplus"

# export GREP_OPTIONS='--exclude=*\.svn* --color'
export GREP_OPTIONS='--exclude-dir=.svn --color=auto'
export EDITOR=vim

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias dir='ls --color=auto --format=vertical'
    alias vdir='ls --color=auto --format=long'
fi

# jump to project home
if [[ $PROJECT_HOME ]]; then
    alias ph='cd $PROJECT_HOME'
fi

# alias  greps='find . -name .svn -prune -o -print | xargs grep -r $@'

function greps {
    phrase=$1
    dir=$2
    find $dir -name .svn -prune -o -print | xargs grep -r $phrase
}

function setproject {
    if [ -z "$1" ]; then
        echo "NO-OP: No project specified."
        exit
    fi
    if [ -d "/var/www/$1" ]; then
      SITE_HOME="/var/www/$1"
    else
      SITE_HOME="/var/www/dfalke-b.$1.org"
    fi
    if [ -d $SITE_HOME ]; then
        export GUS_PROJ_NAME=$1
        source $SITE_HOME/etc/setenv
    else
        echo "Unknown project: $1"
    fi
}

# starts a screen session, optionally for a specific project
function sc {
    if [ -z "$1" ]; then
        screen
        exit
    fi
    setproject $1
    if [ "$GUS_PROJ_NAME" ]; then
        # if screen session is running, reattach
        # otherwise, source setenv and start screen with session name $1
        screen -c $HOME/.screenrc-project -d -R $GUS_PROJ_NAME
    else
        echo "Sorry: $GUS_PROJ_NAME"
    fi
}

# tab completion for the afore-defined `sc` function
complete -o default -o nospace -W "$( find /var/www -maxdepth 1 -name *.org -print | sed -n 's:/var/www/\(\w\+\):\1:gp' )" sc setproject

function vimfind {
    find . -name $1 -exec vim {} +
}
alias vfind='vimfind'

function branch_prompt {
    if [[ -n "$PROJECT_HOME" ]]; then
        local svn_dirs=`find $PROJECT_HOME/ -maxdepth 2 -name .svn -type d -exec dirname {} \;`
        local branches=`svn info $svn_dirs | grep ^URL | sed 's_URL\: https://www.cbil.upenn.edu/svn/\(apidb\|gus\)/[a-zA-Z]\+/\(branches/\)\?_@_' | sort -u | tr "\n" " "`
        echo -n "${branches}"
    fi
}

function project_prompt {
    if [[ -n "$PROJECT_HOME" ]]; then
        echo "<$WDK_MODEL> "
    fi
}

# PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
